import React, { useState } from "react";
import FilePreview from "../Modal/FilePreview";
import { sendMessage, uploadFile } from "../../API/chatList";

interface MessageInputProps {
  onSend: (messageId: string, text: string, attachments: File[]) => void;
  userId: string;
  receiverId: string;
  socket: WebSocket | null;
}

const MessageInput: React.FC<MessageInputProps> = ({ onSend, userId, receiverId, socket,attachments, setAttachments}) => {
  const [message, setMessage] = useState("");
 // const [attachments, setAttachments] = useState<File[]>([]);
  const [loading, setLoading] = useState(false);

  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    if (e.target.files) {
      setAttachments([...attachments, ...Array.from(e.target.files)]);
    }
  };

  const handleRemoveFile = (index: number) => {
    setAttachments(attachments.filter((_, i) => i !== index));
  };

  const handleSend = async () => {
    if (!message && attachments.length === 0) return;

    setLoading(true);

    try {
      if (socket && socket.readyState === WebSocket.OPEN) {

        socket.send(
          JSON.stringify({
            event: "sendMessage",
            data: {
              senderId: userId,
              receiverId,
              text: message,
              attachments: attachments.map((file) => file.name),
            },
          })
        );
      } else {
        console.error("WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω");
      }
      console.log(message)
      // –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ WebSocket
     

      socket.onmessage = async (event) => {
        try {
          // –ü–∞—Ä—Å–∏–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
          const response = JSON.parse(event.data);
          console.log("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç WebSocket:", response);
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –æ—Ç–≤–µ—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ
          if (response.type === "newMessage" && response.data) {
            const { id } = response.data; // –ò–∑–≤–ª–µ–∫–∞–µ–º id –∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–∞
            console.log("–ü–æ–ª—É—á–µ–Ω ID —Å–æ–æ–±—â–µ–Ω–∏—è:", id);
      
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –∏ –∑–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            if (attachments.length > 0) {
              if (id) {
                try {
                  // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Promise.all
                  await Promise.all(
                    attachments.map((file) => uploadFile(userId, id, file))
                  );
                  console.log("–í—Å–µ —Ñ–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.");
                } catch (error) {
                  console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–æ–≤:", error);
                }
              } else {
                console.error("–û—à–∏–±–∫–∞: ID —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç.");
              }
            }
          } else {
            console.warn("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –¥–∞–Ω–Ω—ã–µ:", response);
          }
        } catch (error) {
          console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
        }
      };
      
      // –í—ã–∑—ã–≤–∞–µ–º onSend —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
      onSend(Date.now().toString(), message, attachments || []);

      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      setMessage("");
      setAttachments([]);
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", error);
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="p-4 border-t bg-gray-100">
      <div className="flex items-center space-x-3">
        <input
          type="text"
          placeholder="–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ..."
          value={message}
          onChange={(e) => setMessage(e.target.value)}
          className="flex-grow p-2 border rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        />
        <label className="p-2 bg-gray-200 rounded-md cursor-pointer hover:bg-gray-300">
          üìé
          <input
            type="file"
            multiple
            onChange={handleFileChange}
            className="hidden"
          />
        </label>
        <button
          onClick={handleSend}
          disabled={loading}
          className={`p-2 text-white rounded-md ${
            loading ? "bg-gray-400" : "bg-blue-500 hover:bg-blue-600"
          }`}
        >
          ‚û§
        </button>
      </div>
      <FilePreview files={attachments} onRemove={handleRemoveFile} />
    </div>
  );
};

export default MessageInput;
